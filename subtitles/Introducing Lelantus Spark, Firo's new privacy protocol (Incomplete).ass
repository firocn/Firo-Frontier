[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1280
PlayResY: 720

[Aegisub Project Garbage]
Last Style Storage: Default
Audio File: C:/Users/Kuro/Downloads/Introducing Lelantus Spark, Firo's new privacy protocol.mp4
Video File: C:/Users/Kuro/Downloads/Introducing Lelantus Spark, Firo's new privacy protocol.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.500000
Scroll Position: 155
Active Line: 156
Video Position: 28420

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,阿里巴巴普惠体 2.0 65 Medium,64,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,4,0,2,10,10,64,1
Style: Up,思源黑体 CN,64,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,3,0,2,10,10,180,1
Style: Bottom,造字工房尚黑 G0v1 粗体,60,&H00FFFFFF,&H000000FF,&H0024167C,&H00000000,0,0,0,0,100,100,0,0,1,4,0,2,10,10,0,1
Style: Top,造字工房尚黑 G0v1 常规体,50,&H00FFFFFF,&H000000FF,&H0024167C,&H00000000,0,0,0,0,100,100,0,0,3,3,0,7,10,10,10,1
Style: Top No Box,造字工房尚黑 G0v1 常规体,50,&H00FFFFFF,&H000000FF,&H0024167C,&H00000000,0,0,0,0,100,100,0,0,1,3,0,8,10,10,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.54,0:00:02.18,Default,,0,0,0,,大家好
Dialogue: 0,0:00:02.18,0:00:07.30,Default,,0,0,0,,今天我们想谈一谈 Lelantus Spark
Dialogue: 0,0:00:07.30,0:00:11.30,Default,,0,0,0,,这是我们一直在研究的新的隐私协议
Dialogue: 0,0:00:11.30,0:00:21.38,Default,,0,0,0,,它将取代，本来我们要去 Lelantus v2，\N但后来我们决定直接去 Lelantus Spark
Dialogue: 0,0:00:21.38,0:00:25.98,Default,,0,0,0,,今天我们非常荣幸地请到了 Aram Jivanyan
Dialogue: 0,0:00:25.98,0:00:31.90,Default,,0,0,0,,他是 Lelantus v1、v2 和 Spark 的创造者
Dialogue: 0,0:00:31.90,0:00:40.18,Default,,0,0,0,,我们还请到了 Aaron 博士，\N他来自 Cypher Stack，与 Firo 签有全职合同
Dialogue: 0,0:00:40.18,0:00:49.02,Default,,0,0,0,,他们一起努力使 Lelantus Spark 成为一个伟大的新隐私协议
Dialogue: 0,0:00:49.02,0:00:53.34,Default,,0,0,0,,也许我们可以从 Aram 开始
Dialogue: 0,0:00:53.34,0:01:07.66,Default,,0,0,0,,谈谈 Lelantus v1（我们现在使用的）和\NLelantus v2（我们应该去的）之间的区别
Dialogue: 0,0:01:07.66,0:01:12.06,Default,,0,0,0,,然后谈谈我们试图通过 Lelantus Spark 实现的目标
Dialogue: 0,0:01:12.06,0:01:13.90,Default,,0,0,0,,所以，Aram
Dialogue: 0,0:01:13.90,0:01:17.42,Default,,0,0,0,,是的，大家好
Dialogue: 0,0:01:17.42,0:01:26.26,Default,,0,0,0,,Spark 的创建是为了解决 Lelantus 两年来存在的一个非常重要的问题
Dialogue: 0,0:01:26.26,0:01:33.14,Default,,0,0,0,,我们创建了 Lelantus v1，它缺乏直接匿名支付的功能
Dialogue: 0,0:01:33.14,0:01:41.34,Default,,0,0,0,,你可以铸造和花费不同金额的币，但它没有实现直接匿名支付
Dialogue: 0,0:01:41.34,0:01:49.98,Default,,0,0,0,,实际上它做到了，我有一些算法来做到这一点，\N但 Aaron 博士很快就把它打破了
Dialogue: 0,0:01:49.98,0:01:58.58,Default,,0,0,0,,你还记得吗？\N你发现现有的直接匿名支付结构有一个非常严重的问题
Dialogue: 0,0:01:58.58,0:02:09.30,Default,,0,0,0,,接下来，在为解决这个问题奋斗了一年多之后，\N我找到了另一个解决方案，它允许进行直接匿名支付
Dialogue: 0,0:02:09.30,0:02:15.66,Default,,0,0,0,,比如你可以匿名发送币到指定的接收方地址
Dialogue: 0,0:02:15.66,0:02:26.86,Default,,0,0,0,,但是这个结构，我称之为 Lelantus v2，它不支持另一个\N非常重要的功能，就是隐形地址（Stealth Addressing）
Dialogue: 0,0:02:26.86,0:02:32.46,Default,,0,0,0,,换句话说，它不允许接收方隐私
Dialogue: 0,0:02:32.46,0:02:42.78,Default,,0,0,0,,因此，为了进行直接的匿名支付，你应该获取接收方地址，\N并且该地址以明确的方式成为交易的一部分
Dialogue: 0,0:02:42.78,0:02:50.70,Default,,0,0,0,,因此有人总是可以追踪发送到同一地址的交易数量
Dialogue: 0,0:02:50.70,0:03:04.62,Default,,0,0,0,,当然，你可以要求用户使用不同的地址来接收许多交易，\N但这有点违反了用户体验，这是不好的
Dialogue: 0,0:03:04.62,0:03:10.78,Default,,0,0,0,,所以 Lelantus Spark 现在解决了这个问题，\N它解决了接收方隐私的问题
Dialogue: 0,0:03:10.78,0:03:17.78,Default,,0,0,0,,但它也支持另一个重要功能，即多重签名
Dialogue: 0,0:03:17.78,0:03:26.22,Default,,0,0,0,,所以这就是同一产品的三个不同迭代的区别
Dialogue: 0,0:03:26.22,0:03:29.86,Default,,0,0,0,,好的，但也许在我们深入讨论之前
Dialogue: 0,0:03:29.86,0:03:40.58,Default,,0,0,0,,你知道，\N因为很多听众和社区可能不熟悉什么是隐形地址和接收方隐私
Dialogue: 0,0:03:40.58,0:03:47.42,Default,,0,0,0,,也许 Aaron 你想对这个问题有自己的看法
Dialogue: 0,0:03:47.42,0:03:49.74,Default,,0,0,0,,当然，就像 Aram 说的
Dialogue: 0,0:03:49.74,0:03:57.18,Default,,0,0,0,,理想情况下，\N你不希望接收方的钱包地址作为交易的一部分出现在链上
Dialogue: 0,0:03:57.18,0:04:03.26,Default,,0,0,0,,在最初的 Lelantus v2 协议设计中，他们是这样做的，你可以查看一笔交易
Dialogue: 0,0:04:03.26,0:04:13.58,Default,,0,0,0,,在所有其他信息中，你知道那团被发布到账本上\N的交易数据结构，是接收方的实际钱包地址
Dialogue: 0,0:04:13.58,0:04:19.74,Default,,0,0,0,,所以你知道这泄露了很多信息，\N你知道一个交易流向一个特定的接收方的事实
Dialogue: 0,0:04:19.74,0:04:27.10,Default,,0,0,0,,所以解决这个问题的方法是有效地获取\N这些接收方的钱包地址，而不将它们包括在交易中
Dialogue: 0,0:04:27.10,0:04:33.78,Default,,0,0,0,,当然这在某种意义上是有问题的，\N因为你知道接收方需要能够接收这个交易
Dialogue: 0,0:04:33.78,0:04:39.70,Default,,0,0,0,,以后有权花费这些资金，有不同的方法来做到这一点
Dialogue: 0,0:04:39.70,0:04:49.78,Default,,0,0,0,,其中一个就像你只是使用一个不同的地址，这是一种方法
Dialogue: 0,0:04:49.78,0:04:58.58,Default,,0,0,0,,但是在你和可能想要向你发送资金的人之间需要很多技巧
Dialogue: 0,0:04:58.58,0:05:01.98,Default,,0,0,0,,或者你可能需要让他们在每笔交易中有所不同，\N这是一种很大的痛苦
Dialogue: 0,0:05:01.98,0:05:11.90,Default,,0,0,0,,所以一种方法是它被称为隐形地址或非交互式一次性地址，\N钱包地址不在链上
Dialogue: 0,0:05:11.90,0:05:16.90,Default,,0,0,0,,你仍然可以有一个主要的钱包地址，\N当然，如果你想的话，你可以有多个钱包地址
Dialogue: 0,0:05:16.90,0:05:22.34,Default,,0,0,0,,但发生的情况是，\N交易的发送方通过一些数学运算，使用该钱包地址
Dialogue: 0,0:05:22.34,0:05:26.58,Default,,0,0,0,,基本上准备了一个一次性的地址，而不必首先咨询你
Dialogue: 0,0:05:26.58,0:05:36.42,Default,,0,0,0,,该一次性地址基本上是有效使用并投入交易的，\N然后使用你的钱包地址作为接收方
Dialogue: 0,0:05:36.42,0:05:41.86,Default,,0,0,0,,你可以恢复所需的信息，以便随后花费这些资金，\N所以这是一个非交互式的过程
Dialogue: 0,0:05:41.86,0:05:47.78,Default,,0,0,0,,你不必开始跟踪每个客户的各种情况或任何不同的地址
Dialogue: 0,0:05:47.78,0:05:56.70,Default,,0,0,0,,所以这很好，你知道这是一种类似于你在 Monero 或屏蔽的 Zcash 中看到的结构
Dialogue: 0,0:05:56.70,0:06:00.74,Default,,0,0,0,,虽然你知道数学最终会有一点不同，\N但基本的想法仍然是相同的
Dialogue: 0,0:06:00.74,0:06:09.74,Default,,0,0,0,,你希望链上的所有交易看起来尽可能的相似和不可区分，\N这也包括钱包地址
Dialogue: 0,0:06:09.74,0:06:13.26,Default,,0,0,0,,对，我想一个典型的用例是
Dialogue: 0,0:06:13.26,0:06:22.10,Default,,0,0,0,,如果没有这种隐形地址，即使 Lelantus v2 隐藏了资金的来源
Dialogue: 0,0:06:22.10,0:06:32.66,Default,,0,0,0,,甚至隐藏了，比如说如果我收到了钱，我看不到金额，\N我也不知道那个人什么时候从 Lelantus v2 的地址花了钱
Dialogue: 0,0:06:32.66,0:06:40.82,Default,,0,0,0,,但是在某些情况下，\N它可以透露出相当多的，你知道有一些像元数据泄漏
Dialogue: 0,0:06:40.82,0:06:52.54,Default,,0,0,0,,比如说如果我在网站上放了一个地址，\N只要有人给我寄钱，每个人都会知道我收到了一笔钱
Dialogue: 0,0:06:52.54,0:06:59.30,Default,,0,0,0,,但他们不知道金额，也不知道钱从哪里来，\N他们不知道我什么时候转移了资金
Dialogue: 0,0:06:59.30,0:07:05.54,Default,,0,0,0,,但我在这个地址上收到东西这件事是公开的，\N每个人都可以看到
Dialogue: 0,0:07:05.54,0:07:10.90,Default,,0,0,0,,比如说，如果我使用隐形地址类型的系统，我把它放在那里
Dialogue: 0,0:07:10.90,0:07:16.50,Default,,0,0,0,,你知道 Aaron 和 Aram 一直在说，\N你不能拿着这个地址在区块链上寻找它
Dialogue: 0,0:07:16.50,0:07:19.58,Default,,0,0,0,,说哦，是的，这个地址什么时候收到了什么东西
Dialogue: 0,0:07:19.58,0:07:27.58,Default,,0,0,0,,所以我认为这是整体隐私协议系统的一个非常重要的组成部分
Dialogue: 0,0:07:27.58,0:07:33.54,Default,,0,0,0,,这也是为什么我们想做 Spark 的主要动机之一
Dialogue: 0,0:07:33.54,0:07:39.22,Default,,0,0,0,,所以我想我们可以继续讨论我们一直在讨论的问题
Dialogue: 0,0:07:39.22,0:07:44.58,Default,,0,0,0,,我想现在很关注的是对多重签名的支持
Dialogue: 0,0:07:44.58,0:07:55.30,Default,,0,0,0,,所以也许 Aram 可以解释一下\N什么是多重签名以及为什么它很重要
Dialogue: 0,0:07:55.30,0:08:00.10,Default,,0,0,0,,实际上这个问题是由 Aaron 博士提出来的
Dialogue: 0,0:08:00.10,0:08:04.34,Default,,0,0,0,,我们正在研究这个新的版本，试图解决接收方的隐私问题
Dialogue: 0,0:08:04.34,0:08:11.62,Default,,0,0,0,,Aaron 刚刚提到支持多重签名是多么重要，\N因为你知道，特别是在商业应用中
Dialogue: 0,0:08:11.62,0:08:23.10,Default,,0,0,0,,你希望有很多人控制签名过程，\N这实际上需要将签名过程委托给多方
Dialogue: 0,0:08:23.10,0:08:30.14,Default,,0,0,0,,所以没有任何一个恶意的一方将能够\N在没有其他人的允许下做任何花费
Dialogue: 0,0:08:30.14,0:08:33.14,Default,,0,0,0,,我说的对吗，Aaron
Dialogue: 0,0:08:33.14,0:08:34.94,Default,,0,0,0,,是的，我的意思是这是一个很好的思考方式
Dialogue: 0,0:08:34.94,0:08:38.30,Default,,0,0,0,,我的意思是有几个不同的原因，你可能想这样做
Dialogue: 0,0:08:38.30,0:08:49.14,Default,,0,0,0,,你知道有一些链外协议需要有效地\N多方或多个不同的算法来进行互动以控制资金
Dialogue: 0,0:08:49.14,0:09:02.58,Default,,0,0,0,,就像你说的另一个应用，你知道经典的例子是一个企业，\N你希望多个董事共同控制一个钱包地址的支付密钥
Dialogue: 0,0:09:02.58,0:09:11.58,Default,,0,0,0,,基本上要求他们互动，都批准进行交易。\N这是一个简化的案例，还有其他的案例
Dialogue: 0,0:09:11.58,0:09:18.74,Default,,0,0,0,,总是发生像 Quadriga 这样的事情，\N比如一个人消失了或者带着钱跑了
Dialogue: 0,0:09:18.74,0:09:31.34,Default,,0,0,0,,那么有一个额外的控制是很好的，通过多重签名，\N特别是如果你持有大量的钱或者为其他人持有资金
Dialogue: 0,0:09:31.34,0:09:38.66,Default,,0,0,0,,那么当然这可以在透明层进行，\N比如 Firo 拥有的正常比特币类型的地址
Dialogue: 0,0:09:38.66,0:09:53.90,Default,,0,0,0,,但是，当我们想要实现强制隐私的时候，\N把这个功能内置到我们的隐私地址系统中是很好的
Dialogue: 0,0:09:53.90,0:10:04.62,Default,,0,0,0,,这是一个相当热门的话题，\N我想我们以前可能低估了它的重要性
Dialogue: 0,0:10:04.62,0:10:13.06,Default,,0,0,0,,我想 Aaron 博士有一些经验，比如 Triptych，\N所以你想谈一谈这个问题吗？
Dialogue: 0,0:10:13.06,0:10:21.90,Default,,0,0,0,,是的，我的意思是 Triptych 是另一个隐私交易协议
Dialogue: 0,0:10:21.90,0:10:31.02,Default,,0,0,0,,具有类似于 Lelantus Spark 的底层证明系统，\N在某些方面与我所从事的其他研究有关
Dialogue: 0,0:10:31.02,0:10:35.82,Default,,0,0,0,,但它的数学工作方式使多重签名操作更加复杂
Dialogue: 0,0:10:35.82,0:10:42.46,Default,,0,0,0,,你可以做到这一点，但它非常复杂，\N它需要一些你可能真的不想实现的数学
Dialogue: 0,0:10:42.46,0:10:46.98,Default,,0,0,0,,而且它可能不适合低功率的硬件设备
Dialogue: 0,0:10:46.98,0:10:53.78,Default,,0,0,0,,所以理想情况下，\N你希望数学以一种真正干净和简单的方式支持多重签名操作
Dialogue: 0,0:10:53.78,0:10:57.62,Default,,0,0,0,,Lelantus Spark 让你做到这一点，所以这非常好
Dialogue: 0,0:10:57.62,0:11:04.70,Default,,0,0,0,,这意味着需要共同计算签名的不同各方之间的互动性非常简单
Dialogue: 0,0:11:04.70,0:11:12.14,Default,,0,0,0,,就像在其他协议中一样，\N生成最初的那种地址结构来共同控制一个地址是非常简单的
Dialogue: 0,0:11:12.14,0:11:16.90,Default,,0,0,0,,而且这对于低功率的硬件设备来说也是非常好的
Dialogue: 0,0:11:16.90,0:11:26.34,Default,,0,0,0,,在这种情况下，这些设备可能会存储一部分支付私钥，\N但可能没有计算能力来做很多复杂的数学或证明
Dialogue: 0,0:11:26.34,0:11:31.10,Default,,0,0,0,,所以很高兴可以非常干净地支持这些
Dialogue: 0,0:11:31.10,0:11:34.42,Default,,0,0,0,,是的，我的意思是，因为我认为这是非常不可能的东西
Dialogue: 0,0:11:34.42,0:11:39.26,Default,,0,0,0,,如 Trezor 或 Ledger ，这几乎是基本上 U 盘大小的东西
Dialogue: 0,0:11:39.26,0:11:45.54,Default,,0,0,0,,除了最简单的操作，它不会有很多的 CPU 算力来做其他的事情
Dialogue: 0,0:11:45.54,0:11:53.30,Default,,0,0,0,,我知道 Aaron 博士一直在研究\N我们可以转移某些复杂功能的方法
Dialogue: 0,0:11:53.30,0:11:56.34,Default,,0,0,0,,我的意思是这是一个稍微独立的问题，但我想是相关的
Dialogue: 0,0:11:56.34,0:12:11.14,Default,,0,0,0,,我们可以把很多繁重的计算转移到你的普通电脑或\N你的手机上，同时还可以把签名权留给硬件钱包
Dialogue: 0,0:12:11.14,0:12:17.34,Default,,0,0,0,,是的，也许你想谈谈 Lelantus Spark 中的一些关键结构，\N我可以更详细地谈谈这个
Dialogue: 0,0:12:17.34,0:12:19.30,Default,,0,0,0,,好的，听起来不错
Dialogue: 0,0:12:19.30,0:12:26.94,Default,,0,0,0,,好吧，我想这将是一个很好的时机，也许可以谈谈
Dialogue: 0,0:12:26.94,0:12:37.98,Default,,0,0,0,,什么是查看密钥（Viewing key），\N我们为什么要查看密钥，为什么它是重要的
Dialogue: 0,0:12:37.98,0:12:42.66,Default,,0,0,0,,我的意思是 Aram 和 Aaron 可以从这一点入手
Dialogue: 0,0:12:42.66,0:12:44.94,Default,,0,0,0,,是的，Aaron 请继续
Dialogue: 0,0:12:44.94,0:12:53.50,Default,,0,0,0,,当然，在比特币技术协议中，你有一个有效的公开地址
Dialogue: 0,0:12:53.50,0:12:57.46,Default,,0,0,0,,你有一个与之相关的花费私钥
Dialogue: 0,0:12:57.46,0:13:01.62,Default,,0,0,0,,嗯，好吧，你还能听到我说话吗，我想我愣了一下，没关系
Dialogue: 0,0:13:01.62,0:13:05.50,Default,,0,0,0,,你有一个公共钱包地址和一个与之配套的花费私钥
Dialogue: 0,0:13:05.50,0:13:12.18,Default,,0,0,0,,你可以有效地使用公开地址来扫描链，\N看看有哪些资金是指向该地址的
Dialogue: 0,0:13:12.18,0:13:16.42,Default,,0,0,0,,然后使用花费私钥来花费这些资金
Dialogue: 0,0:13:16.42,0:13:20.94,Default,,0,0,0,,当然，正如我们所说，在链上拥有公开地址有很多可见性
Dialogue: 0,0:13:20.94,0:13:29.90,Default,,0,0,0,,所以在 Lelantus Spark 中，\N类似于 Zcash 和 Monero 的协议和结构，有一个查看密钥
Dialogue: 0,0:13:29.90,0:13:33.22,Default,,0,0,0,,事实上在 Lelantus Spark 中有多达两个查看密钥
Dialogue: 0,0:13:33.22,0:13:43.78,Default,,0,0,0,,让你使用的设备或指定的第三方服务或设备\N获得某种类型的只查看交易的权限
Dialogue: 0,0:13:43.78,0:13:53.46,Default,,0,0,0,,这些交易与你的钱包地址相关联，而无需授予支出权限，\N也无需使该信息在链上公开透明
Dialogue: 0,0:13:53.46,0:13:57.54,Default,,0,0,0,,所以在 Lelantus Spark 有一个传入查看密钥，\N然后有一个完整的查看密钥
Dialogue: 0,0:13:57.54,0:14:04.98,Default,,0,0,0,,所以传入查看密钥的工作原理类似于 Monero 的查看密钥，\N也类似于 Zcash 的传入查看密钥
Dialogue: 0,0:14:04.98,0:14:13.94,Default,,0,0,0,,或者，如果你把这个密钥委托给另一方或设备，该方就\N可以扫描链，并查看哪些币是发往你的钱包地址的
Dialogue: 0,0:14:13.94,0:14:20.78,Default,,0,0,0,,以及可能在上面的任何相关备忘录类型的数据和金额，\N我的意思是这非常有用
Dialogue: 0,0:14:20.78,0:14:33.30,Default,,0,0,0,,因为在一种情况下，也许你想委托给一些有大量计算能力\N的第三方，扫描交易并通知你，比如你是一个零售商
Dialogue: 0,0:14:33.30,0:14:38.74,Default,,0,0,0,,确切地说，你可以扫描和观察那些发给你的交易
Dialogue: 0,0:14:38.74,0:14:48.74,Default,,0,0,0,,还有一种模式，即使你使用的是一种完整的钱包，可以访问\N你的消费密钥，你可能不希望那个消费密钥一直是开放的
Dialogue: 0,0:14:48.74,0:14:55.02,Default,,0,0,0,,在内存中可用，所以能够把那个密钥锁起来，\N加密，不管你想怎么存储它
Dialogue: 0,0:14:55.02,0:15:03.38,Default,,0,0,0,,同时仍然允许钱包在交易进来时进行这种无需信任的扫描，\N这是非常棒的
Dialogue: 0,0:15:03.38,0:15:10.10,Default,,0,0,0,,所以是的，你有一些很好的功能，\N但是这并不能保证你能够看到这些资金是什么时候花掉的
Dialogue: 0,0:15:10.10,0:15:16.70,Default,,0,0,0,,所以有一些方法，你可以尝试从查看密钥来推断\N一个账户的余额是多少，但是这并不完美
Dialogue: 0,0:15:16.70,0:15:25.22,Default,,0,0,0,,而且一些 Zcash 协议支持有一个流出查看密钥的能力，\N但是 Monero 协议目前并不支持这个
Dialogue: 0,0:15:25.22,0:15:30.94,Default,,0,0,0,,事实证明，要做到这一点是很棘手的，\N但在 Lelantus Spark 中，我们想出了一种方法来做到这一点
Dialogue: 0,0:15:30.94,0:15:38.18,Default,,0,0,0,,所以这是另一个相关的查看密钥，\N与传入查看密钥结合在一起，所以它可以与它一起工作
Dialogue: 0,0:15:38.18,0:15:45.38,Default,,0,0,0,,你可以做的是你可以识别传入的资金后来在交易中被花费，\N但你能看到的是有限的
Dialogue: 0,0:15:45.38,0:15:56.46,Default,,0,0,0,,例如你现在不能看到传出的地址是什么，但你可以看到某个\N价值的币在交易中被花费，这让你确定一个账户的全部余额
Dialogue: 0,0:15:56.46,0:16:03.22,Default,,0,0,0,,所以这对你的账户来说是很有用的，\N比如说，也许你是一个公共慈善机构
Dialogue: 0,0:16:03.22,0:16:14.98,Default,,0,0,0,,你希望你的资金能够有效地被看到，这样\N公众或你的捐助者就可以看到你的公共慈善钱包地址的余额
Dialogue: 0,0:16:14.98,0:16:20.46,Default,,0,0,0,,所以这很好。\N另一个应用可能是在这种多重签名的情况下
Dialogue: 0,0:16:20.46,0:16:28.18,Default,,0,0,0,,如果你是一组签名者的一部分，如果你把它设置为\N所谓的门槛情况，即某些签名者群体可以授权交易
Dialogue: 0,0:16:28.18,0:16:36.14,Default,,0,0,0,,你可能想知道另一组签名者是否授权了\N你不在其中的交易，所以这有各种很好的应用
Dialogue: 0,0:16:36.14,0:16:42.14,Default,,0,0,0,,同样，这种查看访问无论是传入查看\N还是完整查看都不会下放支出权限
Dialogue: 0,0:16:42.14,0:16:48.98,Default,,0,0,0,,因此，人们可能能够识别资金的进出，\N但他们不能从你的地址花费资金，所以这很酷
Dialogue: 0,0:16:48.98,0:17:00.10,Default,,0,0,0,,最后还有一种叫做委托密钥的密钥，这与 Reuben 先前所说的想要使用低功耗硬件设备的一些好处有关
Dialogue: 0,0:17:00.10,0:17:08.10,Default,,0,0,0,,所以 Lelantus Spark 交易包括几个不同的组件，\N其中一个是所谓的多人证明
Dialogue: 0,0:17:08.10,0:17:18.06,Default,,0,0,0,,这基本上是给你提供交易的花费签名者的模糊性，\N这可能是一个相当昂贵的计算证明
Dialogue: 0,0:17:18.06,0:17:25.50,Default,,0,0,0,,它可能不适合于一个非常低功率的硬件设备来做，\N所以你可以做的是你可以采取这个所谓的委托密钥
Dialogue: 0,0:17:25.50,0:17:31.66,Default,,0,0,0,,你可以把它提供给一个半信任的设备，\N如一个更高功率的计算机，台式机或笔记本电脑或其他东西
Dialogue: 0,0:17:31.66,0:17:41.74,Default,,0,0,0,,该设备可以生成一个交易的大部分昂贵部分，\N但不能最终确定它并实际完成一个花费操作
Dialogue: 0,0:17:41.74,0:17:53.98,Default,,0,0,0,,因此，一个低功率的硬件设备可以将这些昂贵的计算转移到\N更高功率的电脑对应设备上，然后再做非常便宜的计算工作
Dialogue: 0,0:17:53.98,0:18:00.38,Default,,0,0,0,,用花费密钥完成交易的最终授权，\N所以花费密钥基本上可以保持你想要的安全
Dialogue: 0,0:18:00.38,0:18:10.26,Default,,0,0,0,,你可以委托和转移这种其他的查看或证明生成的权力\N给一个有限信任的高功率的设备，所以非常灵活
Dialogue: 0,0:18:10.26,0:18:21.74,Default,,0,0,0,,所以我想，简而言之，这个传入查看密钥意味着你可以看到\N进来的东西，然后你有传出密钥，你可以看到传出的东西
Dialogue: 0,0:18:21.74,0:18:25.66,Default,,0,0,0,,一起你可以得到一个特定地址的余额
Dialogue: 0,0:18:25.66,0:18:36.50,Default,,0,0,0,,也有可能有一个委托密钥，\N意味着我有这种低功率的设备，我想让它授权消费
Dialogue: 0,0:18:36.50,0:18:47.22,Default,,0,0,0,,但所有这些隐私交易所需的复杂计算，\N都可以在更高功率的设备上完成
Dialogue: 0,0:18:47.22,0:18:53.42,Default,,0,0,0,,因此，我认为这是一个非常重要的问题，\N很多人说，你是隐私币，为什么我需要查看密钥
Dialogue: 0,0:18:53.42,0:19:03.34,Default,,0,0,0,,我想我的想法是，隐私是关于能够有选择地\N透露你想透露的内容，查看密钥允许
Dialogue: 0,0:19:03.34,0:19:07.26,Default,,0,0,0,,而如果你没有这个功能，就会变得非常困难
Dialogue: 0,0:19:07.26,0:19:15.02,Default,,0,0,0,,就像一个例子，如果我想支付我的税收\N或我想把它发送给我的会计师
Dialogue: 0,0:19:15.02,0:19:22.58,Default,,0,0,0,,我真的不能以一种无需信任的方式做到，\N我将不得不给他们花费授权，这不是很好
Dialogue: 0,0:19:22.58,0:19:32.98,Default,,0,0,0,,所以我认为这是一个非常有用的东西，\N我认为这将是一个特别是当加密货币变得更加成熟
Dialogue: 0,0:19:32.98,0:19:33.02,Default,,0,0,0,,这将是一个非常重要的组成部分，作为一个现金
Dialogue: 0,0:00:00.00,0:00:05.00,Default,,0,0,0,,
